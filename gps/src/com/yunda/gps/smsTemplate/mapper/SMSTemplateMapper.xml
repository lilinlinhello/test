<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunda.gps.smsTemplate.mapper.SMSTemplateMapper">

<resultMap type="smsTemplateVo" id="smsTemplateMap">
	<id column="SMS_TEMP_ID" property="smsId" jdbcType="INTEGER"/>
	<result column="SMS_TYPE" property="smsType" jdbcType="INTEGER"/>
	<result column="EQUIP_BRAND" property="smsBrand" jdbcType="VARCHAR"/>
	<result column="EQUIP_TYPE" property="smsModel" jdbcType="VARCHAR"/>
	<result column="SMS_ORDER" property="smsOrder" jdbcType="INTEGER"/>
	<result column="SMS_CONTENT" property="smsContent" jdbcType="VARCHAR"/>
	<result column="CREATE_BY" property="createBy" jdbcType="VARCHAR"/>
	<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP"/>
	<result column="UPDATE_BY" property="updateBy" jdbcType="VARCHAR"/>
	<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP"/>
	<result column="DELETE_FLAG" property="deleteFlag" jdbcType="INTEGER"/>
</resultMap>

<!-- 分页查询短信信息模板列表 -->
<select id="getSMSList" parameterType="smsTemplateVo" resultMap="smsTemplateMap">
	SELECT
	SMS_TEMP_ID,
	SMS_TYPE,
	EQUIP_BRAND,  
	EQUIP_TYPE,
	SMS_ORDER,
	SMS_CONTENT,
	CREATE_BY,
	date_format(CREATE_TIME,'%Y-%c-%d %H:%i:%s') as CREATE_TIME,
	UPDATE_BY,
	date_format(UPDATE_TIME,'%Y-%c-%d %H:%i:%s') as UPDATE_TIME,
	DELETE_FLAG
FROM
	SMS_TEMPLATES
	WHERE 1=1
	<if test="smsType !=null">and SMS_TYPE=#{smsType}</if>
	<if test="smsBrand !=null and smsBrand !=''">and EQUIP_BRAND=#{smsBrand}</if>
	<if test="smsModel !=null and smsModel !=''">and EQUIP_TYPE=#{smsModel}</if>
	<if test="deleteFlag !=null">and DELETE_FLAG=#{deleteFlag}</if>
</select>

<select id="queryList" resultType="map">
	SELECT
		SMS_TEMP_ID,
		SMS_TYPE,
		EQUIP_BRAND,  
		EQUIP_TYPE,
		SMS_ORDER,
		SMS_CONTENT
	FROM
		SMS_TEMPLATES
	WHERE DELETE_FLAG=0
</select>

<select id="queryBrandAndType" parameterType="map" resultType="int">
	SELECT count(1) count 
	FROM SMS_TEMPLATES
	WHERE EQUIP_BRAND=#{smsBrand} AND EQUIP_TYPE = #{smsModel} AND SMS_TYPE=#{smsType}
</select>

<insert id="smsTemplateInsert" parameterType="smsTemplateVo">
	INSERT INTO 
	SMS_TEMPLATES(SMS_TYPE,EQUIP_BRAND,EQUIP_TYPE,SMS_ORDER,SMS_CONTENT,CREATE_BY,CREATE_TIME,UPDATE_BY,UPDATE_TIME)
	VALUES(#{smsType,jdbcType=INTEGER},#{smsBrand,jdbcType=VARCHAR},#{smsModel,jdbcType=VARCHAR},#{smsOrder,jdbcType=INTEGER},#{smsContent,jdbcType=VARCHAR},
			#{createBy,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateBy,jdbcType=VARCHAR},#{updateTime,jdbcType=TIMESTAMP})
</insert>

<select id="getSMSTemplate" parameterType="string" resultMap="smsTemplateMap">
	SELECT 
	SMS_TEMP_ID,
	SMS_TYPE,
	EQUIP_BRAND,  
	EQUIP_TYPE,
	SMS_ORDER,
	SMS_CONTENT,
	CREATE_BY,
	date_format(CREATE_TIME,'%Y-%c-%d %H:%i:%s') as CREATE_TIME,
	UPDATE_BY,
	date_format(UPDATE_TIME,'%Y-%c-%d %H:%i:%s') as UPDATE_TIME,
	DELETE_FLAG
FROM
	SMS_TEMPLATES
	WHERE 
	SMS_TEMP_ID=#{smsId,jdbcType=INTEGER}
</select>

<update id="smsTemplateUpdate" parameterType="smsTemplateVo">
	UPDATE SMS_TEMPLATES
	SET
	SMS_TYPE=#{smsType,jdbcType=INTEGER},
	EQUIP_BRAND=#{smsBrand,jdbcType=VARCHAR},
	EQUIP_TYPE=#{smsModel,jdbcType=VARCHAR},
	SMS_ORDER=#{smsOrder,jdbcType=INTEGER},
	SMS_CONTENT=#{smsContent,jdbcType=VARCHAR},
	UPDATE_BY=#{updateBy,jdbcType=VARCHAR},
	UPDATE_TIME=#{updateTime,jdbcType=TIMESTAMP}
	WHERE SMS_TEMP_ID=#{smsId,jdbcType=INTEGER}
</update>
	
<update id="smsTemplateDelete" parameterType="string">
	UPDATE SMS_TEMPLATES
	SET
	DELETE_FLAG=1
	WHERE
	SMS_TEMP_ID=#{smsId}
</update>
</mapper>